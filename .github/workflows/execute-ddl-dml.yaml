name: execute-ddl-dml

on:
  workflow_dispatch:

env: 
  PY_SCRIPT_PATH: devops/execute-ddl-dml.py
  DDL_SCRIPT_PATH: devops/releases/mongo/ddl/ddl.js
  DML_SCRIPT_PATH: devops/releases/mongo/dml/dml.js 
#   AUTH_MECHANISM: MONGODB-X509
  MONGO_CONNECTION_STRING: mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.8.0

jobs:
  js-execution:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: bitnami/mongodb:latest
        ports:
          - 27017:27017
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x' 

      - name: Setup Mongosh & TLS Certificate Key File
        run: |
          wget https://downloads.mongodb.com/compass/mongosh-1.8.0-linux-x64.tgz
          tar -xvf mongosh-1.8.0-linux-x64.tgz
          chmod +x mongosh-1.8.0-linux-x64/bin/mongosh
          find . -iname mongosh -exec cp -R {} /usr/local/bin/ \;
          echo "TLS_CRT_KEY_FILE=`echo ${{ secrets.TLS_CERTIFICATE_KEY_FILE }} | tr -d '\r'`" > $GITHUB_ENV
          touch ./tlsCertificateKeyFile.pem
          echo ${{ env.TLS_CRT_KEY_FILE }} > ./tlsCertificateKeyFile.pem
          cat ./tlsCertificateKeyFile.pem

      # In this step, the python script which will execute the ddl and dml scripts. 
        
      - name: Execute Py Script
        run: python ${{ env.PY_SCRIPT_PATH }}
        env:
          DDL_SCRIPT_PATH: ${{ env.DDL_SCRIPT_PATH }}
          DML_SCRIPT_PATH: ${{ env.DML_SCRIPT_PATH }}
          MONGO_CONNECTION_STRING: ${{ env.MONGO_CONNECTION_STRING }}
#           TLS_CERTIFICATE_KEY_FILE_PASSWORD: ${{ secrets.TLS_CERTIFICATE_KEY_FILE_PASSWORD }}
#           TLS_CERTIFICATE_KEY_FILE: /tmp/tlsCertificateKeyFile.pem
#           AUTH_MECHANISM: ${{ env.AUTH_MECHANISM }}
